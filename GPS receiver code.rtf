{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
/Arduino GPS receiver\
//#include <SoftwareSerial.h>\
#include <RF24Network.h>\
#include <RF24.h>\
#include <SPI.h>\
// nRF24L01(+) radio attached  (CE, CSN)\
RF24 radio(9,10);\
// Network uses that radio\
RF24Network network(radio);\
// Channel of our node\
const uint16_t channel = 60;\
// Address of our node\
const uint16_t this_node = 0;\
// How many packets have we sent already\
unsigned long packets_sent;\
// Structure of our payload, limited to 32 bytes\
struct payload_t      // 32 bytes max\
\{\
 unsigned long counter;  // 4 bytes\
 double lat;       // 4 bytes\
 double lng;       // 4 bytes\
\};\
// packet variables\
unsigned long Counter;\
double setLL[2];\
void getRadioData();\
void setup() \{\
Serial.begin(115200);\
SPI.begin();\
 // Radio setup\
 radio.begin();\
 // network.begin(/*channel*/, /*node address*/);\
 network.begin(channel, this_node);\
\}\
void loop() \{\
// Pump the radio network regularly\
 network.update();\
//  delay(100);\
 // Is there anything ready for us?\
 while ( network.available() )\{\
   // If so, grab it and print it out\
   getRadioData();\
 \}\
\}\
// getRadioData()          // get Network data\
void getRadioData()\{\
 RF24NetworkHeader header;\
 payload_t payload;\
 bool done = false;\
 while (!done)\{\
   done =  network.read(header,&payload,sizeof(payload));\
   Counter = payload.counter;\
  setLL[0] = payload.lat;\
  setLL[1] = payload.lng;\
   Serial.print("Packet #");\
   Serial.print(Counter);\
   Serial.print(" Lat: ");\
   Serial.print(setLL[0],6);\
   Serial.print(" Lng: ");\
   Serial.print(setLL[1],6);\
\}\
\}}